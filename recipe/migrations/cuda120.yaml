migrator_ts: 1682985063
__migrator:
  kind:
    version
  migration_number:
    2
  build_number:
    1
  paused: false
  override_cbc_keys:
    - cuda_compiler_stub
  operation: key_add
  check_solvable: false
  primary_key: cuda_compiler_version
  ordering:
    cxx_compiler_version:
      - 9
      - 8
      - 7
    c_compiler_version:
      - 9
      - 8
      - 7
    fortran_compiler_version:
      - 9
      - 8
      - 7
    docker_image:
      - quay.io/condaforge/linux-anvil-comp7              # [os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-aarch64            # [os.environ.get("BUILD_PLATFORM") == "linux-aarch64"]
      - quay.io/condaforge/linux-anvil-ppc64le            # [os.environ.get("BUILD_PLATFORM") == "linux-ppc64le"]
      - quay.io/condaforge/linux-anvil-armv7l             # [os.environ.get("BUILD_PLATFORM") == "linux-armv7l"]
      - quay.io/condaforge/linux-anvil-cuda:9.2           # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:10.0          # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:10.1          # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:10.2          # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:11.0          # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:11.1          # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:11.2          # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      # case: native compilation (build == target)
      - quay.io/condaforge/linux-anvil-ppc64le-cuda:11.2  # [ppc64le and os.environ.get("BUILD_PLATFORM") == "linux-ppc64le"]
      - quay.io/condaforge/linux-anvil-aarch64-cuda:11.2  # [aarch64 and os.environ.get("BUILD_PLATFORM") == "linux-aarch64"]
      # case: cross-compilation (build != target)
      - quay.io/condaforge/linux-anvil-cuda:11.2          # [ppc64le and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      - quay.io/condaforge/linux-anvil-cuda:11.2          # [aarch64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
      # case: non-CUDA builds
      - quay.io/condaforge/linux-anvil-cos7-x86_64        # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
    cuda_compiler_version:
      - None
      - 10.2                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
      - 11.0                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
      - 11.1                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
      - 11.2                       # [(linux or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
      - 12.0                       # [(linux or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  commit_message: |
    Rebuild for CUDA 12 w/arch support
    
    The transition to CUDA 12 SDK includes new packages for all CUDA libraries and
    build tools. Notably, the cudatoolkit package no longer exists, and packages
    should depend directly on the specific CUDA libraries (libcublas, libcusolver,
    etc) as needed. For an in-depth overview of the changes and to report problems
    [see this issue]( https://github.com/conda-forge/conda-forge.github.io/issues/1963 ).
    Please feel free to raise any issues encountered there. Thank you! :pray:

cuda_compiler:                 # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - cuda-nvcc                  # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

cuda_compiler_version:         # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 12.0                       # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

c_compiler_version:            # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 12                         # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

cxx_compiler_version:          # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 12                         # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

fortran_compiler_version:      # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 12                         # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

cdt_name:                      # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - cos7                       # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

docker_image:                                      # [os.environ.get("BUILD_PLATFORM", "").startswith("linux-") and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - quay.io/condaforge/linux-anvil-cos7-x86_64     # [linux64 and os.environ.get("BUILD_PLATFORM") == "linux-64" and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  # case: native compilation (build == target)
  - quay.io/condaforge/linux-anvil-ppc64le         # [ppc64le and os.environ.get("BUILD_PLATFORM") == "linux-ppc64le"]
  - quay.io/condaforge/linux-anvil-aarch64         # [aarch64 and os.environ.get("BUILD_PLATFORM") == "linux-aarch64"]
  # case: cross-compilation (build != target)
  - quay.io/condaforge/linux-anvil-cos7-x86_64     # [ppc64le and os.environ.get("BUILD_PLATFORM") == "linux-64"]
  - quay.io/condaforge/linux-anvil-cos7-x86_64     # [aarch64 and os.environ.get("BUILD_PLATFORM") == "linux-64"]
